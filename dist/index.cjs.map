{"version":3,"sources":["../src/index.ts","../src/__generated__/tsconfigSortOrderMap.json","../src/sortObjectExpression.ts"],"sourcesContent":["import { Expression, isObjectExpression } from '@babel/types';\nimport { Parser, Plugin } from 'prettier';\nimport { parsers as babelParsers } from 'prettier/plugins/babel';\nimport tsconfigFieldMap from './__generated__/tsconfigSortOrderMap.json';\nimport { sortObjectExpression } from './sortObjectExpression.js';\n\ntype JsonRoot = {\n  type: 'JsonRoot';\n  node: Expression;\n};\n\nconst jsonParser = babelParsers.json as Parser<JsonRoot>;\n\nexport const parsers = {\n  json: {\n    ...jsonParser,\n    async parse(text, options) {\n      const ast = await jsonParser.parse(text, options);\n      if (options.filepath.match(/[\\\\/]tsconfig(\\.\\w+)?\\.json$/i)) {\n        if (isObjectExpression(ast.node)) {\n          sortObjectExpression(ast.node, tsconfigFieldMap);\n        }\n      }\n      return ast;\n    },\n  } satisfies Parser<JsonRoot>,\n} satisfies Plugin['parsers'];\n","{\n  \"order\": 0,\n  \"fields\": {\n    \"$schema\": 0,\n    \"files\": 1,\n    \"extends\": 2,\n    \"include\": 3,\n    \"exclude\": 4,\n    \"references\": 5,\n    \"compilerOptions\": {\n      \"order\": 6,\n      \"fields\": {\n        \"allowUnreachableCode\": 0,\n        \"allowUnusedLabels\": 1,\n        \"alwaysStrict\": 2,\n        \"exactOptionalPropertyTypes\": 3,\n        \"noFallthroughCasesInSwitch\": 4,\n        \"noImplicitAny\": 5,\n        \"noImplicitOverride\": 6,\n        \"noImplicitReturns\": 7,\n        \"noImplicitThis\": 8,\n        \"noPropertyAccessFromIndexSignature\": 9,\n        \"noUncheckedIndexedAccess\": 10,\n        \"noUnusedLocals\": 11,\n        \"noUnusedParameters\": 12,\n        \"strict\": 13,\n        \"strictBindCallApply\": 14,\n        \"strictFunctionTypes\": 15,\n        \"strictNullChecks\": 16,\n        \"strictPropertyInitialization\": 17,\n        \"useUnknownInCatchVariables\": 18,\n        \"allowArbitraryExtensions\": 19,\n        \"allowImportingTsExtensions\": 20,\n        \"allowUmdGlobalAccess\": 21,\n        \"baseUrl\": 22,\n        \"customConditions\": 23,\n        \"module\": 24,\n        \"moduleResolution\": 25,\n        \"moduleSuffixes\": 26,\n        \"noResolve\": 27,\n        \"paths\": 28,\n        \"resolveJsonModule\": 29,\n        \"resolvePackageJsonExports\": 30,\n        \"resolvePackageJsonImports\": 31,\n        \"rootDir\": 32,\n        \"rootDirs\": 33,\n        \"typeRoots\": 34,\n        \"types\": 35,\n        \"declaration\": 36,\n        \"declarationDir\": 37,\n        \"declarationMap\": 38,\n        \"downlevelIteration\": 39,\n        \"emitBOM\": 40,\n        \"emitDeclarationOnly\": 41,\n        \"importHelpers\": 42,\n        \"importsNotUsedAsValues\": 43,\n        \"inlineSourceMap\": 44,\n        \"inlineSources\": 45,\n        \"mapRoot\": 46,\n        \"newLine\": 47,\n        \"noEmit\": 48,\n        \"noEmitHelpers\": 49,\n        \"noEmitOnError\": 50,\n        \"outDir\": 51,\n        \"outFile\": 52,\n        \"preserveConstEnums\": 53,\n        \"preserveValueImports\": 54,\n        \"removeComments\": 55,\n        \"sourceMap\": 56,\n        \"sourceRoot\": 57,\n        \"stripInternal\": 58,\n        \"allowJs\": 59,\n        \"checkJs\": 60,\n        \"maxNodeModuleJsDepth\": 61,\n        \"disableSizeLimit\": 62,\n        \"plugins\": 63,\n        \"allowSyntheticDefaultImports\": 64,\n        \"esModuleInterop\": 65,\n        \"forceConsistentCasingInFileNames\": 66,\n        \"isolatedModules\": 67,\n        \"preserveSymlinks\": 68,\n        \"verbatimModuleSyntax\": 69,\n        \"charset\": 70,\n        \"keyofStringsOnly\": 71,\n        \"noImplicitUseStrict\": 72,\n        \"noStrictGenericChecks\": 73,\n        \"out\": 74,\n        \"suppressExcessPropertyErrors\": 75,\n        \"suppressImplicitAnyIndexErrors\": 76,\n        \"emitDecoratorMetadata\": 77,\n        \"experimentalDecorators\": 78,\n        \"jsx\": 79,\n        \"jsxFactory\": 80,\n        \"jsxFragmentFactory\": 81,\n        \"jsxImportSource\": 82,\n        \"lib\": 83,\n        \"moduleDetection\": 84,\n        \"noLib\": 85,\n        \"reactNamespace\": 86,\n        \"target\": 87,\n        \"useDefineForClassFields\": 88,\n        \"diagnostics\": 89,\n        \"explainFiles\": 90,\n        \"extendedDiagnostics\": 91,\n        \"generateCpuProfile\": 92,\n        \"listEmittedFiles\": 93,\n        \"listFiles\": 94,\n        \"traceResolution\": 95,\n        \"composite\": 96,\n        \"disableReferencedProjectLoad\": 97,\n        \"disableSolutionSearching\": 98,\n        \"disableSourceOfProjectReferenceRedirect\": 99,\n        \"incremental\": 100,\n        \"tsBuildInfoFile\": 101,\n        \"noErrorTruncation\": 102,\n        \"preserveWatchOutput\": 103,\n        \"pretty\": 104,\n        \"skipDefaultLibCheck\": 105,\n        \"skipLibCheck\": 106,\n        \"assumeChangesOnlyAffectDirectDependencies\": 107\n      }\n    },\n    \"watchOptions\": {\n      \"order\": 7,\n      \"fields\": {\n        \"watchFile\": 0,\n        \"watchDirectory\": 1,\n        \"fallbackPolling\": 2,\n        \"synchronousWatchDirectory\": 3,\n        \"excludeDirectories\": 4,\n        \"excludeFiles\": 5\n      }\n    },\n    \"typeAcquisition\": {\n      \"order\": 8,\n      \"fields\": {\n        \"enable\": 0,\n        \"include\": 1,\n        \"exclude\": 2,\n        \"disableFilenameBasedTypeAcquisition\": 3\n      }\n    }\n  }\n}\n","import {\n  ObjectExpression,\n  ObjectProperty,\n  StringLiteral,\n  isObjectExpression,\n  isObjectProperty,\n  isStringLiteral,\n} from '@babel/types';\n\nexport type TSConfigSortOrderMap = {\n  order: number;\n  fields: Record<string, number | TSConfigSortOrderMap>;\n};\n\ntype ObjectExpressionProperty = ObjectExpression['properties'][number];\n\ninterface StringLiteralObjectProperty extends ObjectProperty {\n  key: StringLiteral;\n}\n\nconst isStringLiteralObjectProperty = (\n  property: ObjectExpressionProperty,\n): property is StringLiteralObjectProperty =>\n  isObjectProperty(property) && isStringLiteral(property.key);\n\nconst getSortOrder = (\n  sortOrderMap: TSConfigSortOrderMap,\n  property: ObjectExpressionProperty,\n): number => {\n  if (isStringLiteralObjectProperty(property)) {\n    const val = sortOrderMap.fields[property.key.value];\n    if (val !== undefined) {\n      return typeof val === 'number' ? val : val.order;\n    }\n  }\n  return Number.POSITIVE_INFINITY;\n};\n\nexport const sortObjectExpression = (\n  node: ObjectExpression,\n  sortOrderMap: TSConfigSortOrderMap,\n) => {\n  // traverse children\n  for (const property of node.properties) {\n    if (isStringLiteralObjectProperty(property)) {\n      const childSortOrderMap = sortOrderMap.fields[property.key.value];\n      if (isObjectExpression(property.value)) {\n        sortObjectExpression(\n          property.value,\n          childSortOrderMap !== undefined &&\n            typeof childSortOrderMap !== 'number'\n            ? childSortOrderMap\n            : // if the field isn't found, still pass a dummy `sortOrderMap` because we still want\n              // to sort the rest of the nested properties in lexical order\n              { order: 0, fields: {} },\n        );\n      }\n    }\n  }\n\n  // sort properties\n  node.properties.sort((a, b) => {\n    if (\n      isStringLiteralObjectProperty(a) &&\n      isStringLiteralObjectProperty(b) &&\n      !(a.key.value in sortOrderMap.fields) &&\n      !(b.key.value in sortOrderMap.fields)\n    ) {\n      return a.key.value.localeCompare(b.key.value);\n    }\n    return getSortOrder(sortOrderMap, a) - getSortOrder(sortOrderMap, b);\n  });\n\n  // delete location data\n  delete node.start;\n  delete node.end;\n  delete node.loc;\n};\n"],"mappings":"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","names":["import_types","babelParsers"]}